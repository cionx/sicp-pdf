\usepackage{microtype}

% Font settings
\RequirePackage[
	% no space around the following equal sign!
	warnings-off={mathtools-colon,mathtools-overbracket},
	partial = upright
]{unicode-math}

\defaultfontfeatures{%
	Scale=MatchLowercase, % needed here ...
}
\setmonofont{JuliaMono}

\defaultfontfeatures{%
	Scale=MatchLowercase, % ... and here again
	Mapping=tex-text,
	SmallCapsFeatures={LetterSpace=2.5,WordSpace=1.05},
}
\setmainfont[
	Numbers = OldStyle
]{Libertinus Serif}
\setsansfont{Libertinus Sans}
\setmathfont{Libertinus Math}

\usepackage{polyglossia}
\setdefaultlanguage[variant=american]{english}
\setotherlanguages{greek}

% To be able to use '\-/' in place of '-' inside \code{}
% so that long function names containing hyphens
% can be broken up after the hyphen:
\usepackage[shortcuts]{extdash}

% So that file names with multiple dots don’t confuse
% graphicx package when using \includegraphics command:
\usepackage[multidot]{grffile}
\usepackage{graphicx}

\usepackage[usenames,dvipsnames,x11names]{xcolor}
\usepackage{mathtools}

\usepackage{svg}
\svgsetup{
	inkscapelatex = false
}

\usepackage{fancyvrb}
\usepackage{imakeidx}
\usepackage[totoc,font=footnotesize]{idxlayout}
\usepackage[final]{pdfpages} % inserts pages from a pdf file

\usepackage{listings}  % for syntax highlighted code listings
\usepackage{verbatim}  % for simple verbatim and comment environments
\usepackage{enumitem}  % allows customized labels in enumerations
\usepackage{hyperref}  % makes cross references and URLs clickable
\definecolor{LinkRed}{HTML}{80171F}
\hypersetup{
	pdfauthor  = {Harold Abelson, Gerald Jay Sussman, Julie Sussman},
	pdftitle   = {Structure and Interpretation of Computer Programs, 2nd ed.},
	pdfsubject = {computer science, programming, abstraction},
	colorlinks = true,
	linkcolor  = LinkRed,
	urlcolor   = LinkRed,
}

\renewcommand{\dictumwidth}{0.666\linewidth}
\renewcommand{\dictumrule}{\vspace{0.5em}}
\renewcommand{\dictumauthorformat}[1]{#1}
\renewcommand{\raggeddictumauthor}{\raggedright}
\addtokomafont{dictumtext}{\rmfamily}
\addtokomafont{dictumauthor}{\upshape}

% Document colors
\definecolor{SchemeLight}   {HTML} {686868}
\definecolor{SchemeSteel}   {HTML} {888888}
\definecolor{SchemeDark}    {HTML} {262626}
\definecolor{SchemeBlue}    {HTML} {4172A3}
\definecolor{SchemeGreen}   {HTML} {487818}
\definecolor{SchemeBrown}   {HTML} {A07040}
\definecolor{SchemeRed}     {HTML} {AD4D3A}
\definecolor{SchemeViolet}  {HTML} {7040A0}
\definecolor{DropCapGray}   {HTML} {B8B8B8}
\definecolor{ChapterGray}   {HTML} {C8C8C8}
\definecolor{ChapterViolet} {HTML} {AEAECE}
\definecolor{DropCapViolet} {HTML} {9090C0}

\usepackage{lettrine}  % adds commands that make drop capitals
\renewcommand{\LettrineFontHook}{\rmfamily\mdseries\color{DropCapViolet}}
\renewcommand{\DefaultLraise}{0.00}
\renewcommand{\DefaultLoversize}{0.02}
\renewcommand{\DefaultLhang}{0.12}
\setlength{\DefaultFindent}{1pt}
\setlength{\DefaultNindent}{0em}

\lstset{
	xleftmargin = \parindent,
	% Scheme syntax highlighter
	columns          = fixed,
	extendedchars    = true,
	upquote          = true,
	showstringspaces = false,
	sensitive        = false,
	mathescape       = true,
	escapechar  = {~},
	alsodigit   = {>, <, /, -, =, !, ?, *},
	alsoletter  = {'},
	morestring  = [b]",
	morecomment = [l];,
	% Keyword list taken form functional.py in Pygments package:
	morekeywords = {
		=>,
		and,
		begin,
		case,
		cond,
		define,
		define-syntax,
		delay,
		do,
		else,
		if,
		lambda,
		let*,
		let,
		letrec,
		letrec-syntax,
		let-syntax,
		or,
		quasiquote,
		quote,
		set!,
		syntax-rules
		unquote,
		unquote-splicing,
	},
	% If keywords are quoted, they must not be highlighted:
	emph = {
		'=>,
		'and,
		'begin,
		'case,
		'cond,
		'define,
		'define-syntax,
		'delay,
		'do,
		'else,
		'if,
		'lambda,
		'let*,
		'let,
		'letrec,
		'letrec-syntax,
		'let-syntax,
		'or,
		'quasiquote,
		'quote,
		'set!,
		'syntax-rules
		'unquote,
		'unquote-splicing,
	},
	emphstyle = \color{SchemeDark},
	% Paint error red:
	emph = { [2]error },
	emphstyle = [2]\color{SchemeRed},
	% Builtins taken from functional.py:
	emph = {
		[3]*,
		+,
		-,
		/,
		<,
		<=,
		=,
		>,
		>=,
		abs,
		acos,
		angle,
		append,
		apply,
		asin,
		assoc,
		assq,
		assv,
		atan,
		boolean?,
		caaaar,
		caaadr,
		caaar,
		caadar,
		caaddr,
		caadr,
		caar,
		cadaar,
		cadadr,
		cadar,
		caddar,
		cadddr,
		caddr,
		cadr,
		call-with-current-continuation,
		call-with-input-file,
		call-with-output-file,
		call-with-values,
		call/cc,
		car,
		cdaaar,
		cdaadr,
		cdaar,
		cdadar,
		cdaddr,
		cdadr,
		cdar,
		cddaar,
		cddadr,
		cddar,
		cdddar,
		cddddr,
		cdddr,
		cddr,
		cdr,
		ceiling,
		char->integer,
		char-alphabetic?,
		char-ci<=?,
		char-ci<?,
		char-ci=?,
		char-ci>=?,
		char-ci>?,
		char-downcase,
		char-lower-case?,
		char-numeric?,
		char-ready?,
		char-upcase,
		char-upper-case?,
		char-whitespace?,
		char<=?,
		char<?,
		char=?,
		char>=?,
		char>?,
		char?,
		close-input-port,
		close-output-port,
		complex?,
		cons,
		cos,
		current-input-port,
		current-output-port,
		denominator,
		display,
		dynamic-wind,
		eof-object?,
		eq?,
		equal?,
		eqv?,
		eval,
		even?,
		exact->inexact,
		exact?,
		exp,
		expt,
		floor,
		for-each,
		force,
		gcd,
		imag-part,
		inexact->exact,
		inexact?,
		input-port?,
		integer->char,
		integer?,
		interaction-environment,
		lcm,
		length,
		list,
		list->string,
		list->vector,
		list-ref,
		list-tail,
		list?,
		load,
		log,
		magnitude,
		make-polar,
		make-rectangular,
		make-string,
		make-vector,
		map,
		max,
		member,
		memq,
		memv,
		min,
		modulo,
		negative?,
		newline,
		not,
		null-environment,
		null?,
		number->string,
		number?,
		numerator,
		odd?,
		open-input-file,
		open-output-file,
		output-port?,
		pair?,
		peek-char,
		port?,
		positive?,
		procedure?,
		quotient,
		rational?,
		rationalize,
		read,
		read-char,
		real-part,
		real?,
		remainder,
		reverse,
		round,
		scheme-report-environment,
		set-car!,
		set-cdr!,
		sin,
		sqrt,
		string,
		string->list,
		string->number,
		string->symbol,
		string-append,
		string-ci<=?,
		string-ci<?,
		string-ci=?,
		string-ci>=?,
		string-ci>?,
		string-copy,
		string-fill!,
		string-length,
		string-ref,
		string-set!,
		string<=?,
		string<?,
		string=?,
		string>=?,
		string>?,
		string?,
		substring,
		symbol->string,
		symbol?,
		tan,
		transcript-off,
		transcript-on,
		truncate,
		values,
		vector,
		vector->list,
		vector-fill!,
		vector-length,
		vector-ref,
		vector-set!,
		vector?,
		with-input-from-file,
		with-output-to-file,
		write,
		write-char,
		zero?
		},
	emphstyle=[3]\color{SchemeViolet},%
	%
	basicstyle      = \color{SchemeLight}\ttfamily,
	keywordstyle    = \color{SchemeBlue}\bfseries,
	identifierstyle = \color{SchemeDark},
	stringstyle     = \color{SchemeGreen},
	commentstyle    = \color{SchemeLight}\itshape
}

% the following is taken from https://tex.stackexchange.com/a/81722/108717
% because listings apparently can’t deal with unicode (???)
\begingroup
  \catcode0=12 %
  \makeatletter
  \g@addto@macro\lst@DefEC{%
    \lst@CCECUse\lst@ProcessLetter
    ⟨⟩⋮↑% *** add Unicode characters ***
    ^^00% end marker
  }%
\endgroup

\newcommand{\acronym}[1]{\textsc{\fontspec[Numbers={OldStyle}]{Libertinus Serif}\MakeLowercase{#1}}}
\newcommand{\uppersc}[1]{{\fontspec[Letters=UppercaseSmallCaps]{Libertinus Serif}#1}}
\newcommand{\newterm}[1]{\index{#1}\emph{#1}}
\newcommand{\var}[1]{\textsl{#1}}
\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\link}[1]{\hyperref[#1]{#1}}
\newcommand{\heading}[1]{{\sffamily\bfseries #1}}
\newcommand{\dark}{\color{SchemeDark}}
\newcommand{\mono}[1]{\hbox{\ttfamily\scriptsize #1}}
\newcommand{\monoit}[1]{\hbox{\ttfamily\itshape\scriptsize #1}}

\newenvironment{example}%
  {\verbatim\small}%
  {\endverbatim}

\newenvironment{smallexample}%
  {\verbatim\footnotesize}%
  {\endverbatim}

\lstnewenvironment{scheme}[1][]
{\lstset{basicstyle=\ttfamily\small\color{SchemeLight},#1}}
{}

\lstnewenvironment{smallscheme}[1][]
{\lstset{basicstyle=\ttfamily\footnotesize\color{SchemeLight},#1}}
{}

\setcounter{secnumdepth}{3}
\setcounter{tocdepth}{3}

\frenchspacing
\makeindex

\setlist[description, 1]{
	leftmargin = *,
	labelsep = 0pt
}

\DeclarePairedDelimiter{\abs}{\lvert}{\rvert}
